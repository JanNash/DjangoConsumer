language: objective-c

xcode_workspace: DjangoConsumer.xcworkspace
xcode_scheme: DjangoConsumer
osx_image: xcode9.2
xcode_sdk: iphonesimulator11.2

rvm:
  # Pinning rvm ruby to a version that is already installed 
  # on the current osx_image, so the default 
  # $ rvm use $(< .ruby-version) --install --binary --fuzzy
  # which leads to the non-existent ruby version that is 
  # specified inside .ruby-version being installed on each run.
  # Instead, rvm is set to use this required ruby version
  # inside the before_install step.
  - 2.4.2

cache:
  cocoapods: true
  directories:
    # Specifying only the pods of which the specs of the required 
    # versions are not contained in the master Specs repo that comes
    # with osx_image: xcode9.2 . Unfortunately, the cache can't digest
    # the whole 1.4G master Specs repo :D. When updating to a new 
    # osx_image that comes with a master Specs repo that contains
    # the required specs, this can be commented out.
    - ~/.cocoapods/repos/master/Specs/b/7/8/SwiftDate/4.5.1
    
    # Same goes for the ruby installation, .rvm has around 800M
    # on my machine, with three installed rubies. When updating
    # to a new osx_image that contains the required ruby version,
    # this can be commented out.
    - ~/.rvm/rubies/ruby-2.5.0
    
    # Using the default bundler cache directive (like the 
    # cocoapods directive above) does not work because it caches 
    # '/Users/travis/build/JanNash/DjangoConsumer/vendor/bundle',
    # which is not the location where the gemset is going to
    # be installed.
    - ~/.rvm/gems/ruby-2.5.0@DjangoConsumer/

before_install:
  # Re-running rvm use here, so it is run after the cache was loaded
  - rvm use 2.5.0@DjangoConsumer --create

  # #
  # # This whole section must only be run in order to recreate the
  # # rvm-ruby/gemset/bundler/cocapods cache. This should be done
  # # each time the Pod requirements change. However, when a new
  # # osx_image is used which includes a master Specs repo that
  # # contains the required Specs, the whole section can be commented out.
  # #
  #
  # The gem install bundler is necessary in order for the bundle install
  # to work. When the bundle install is commented out, I suppose
  # the bundle install can be commented out as well.
  # - gem install bundler

  # # This mustn't be commented out on osx_image: xcode9.2
  # See https://github.com/travis-ci/travis-ci/issues/8978 for further 
  # information on why this gem update --system is necessary.
  - gem update --system
  
  # The bundle install is necessary in order for the pod repo update 
  # to work. When the pod repo update is commented out, I suppose
  # the bundle install can be commented out as well.
  # - bundle install
  
  # This pod repo update needs to be commented in for one run each time
  # one of the pod versions are updated and the spec for the new version 
  # isn't yet contained in the master Specs repo version that is included
  # in the image of the travis machine on which the build is running.
  # After this one time commenting it in, it should be commented out again,
  # as well as when updating to a newer osx_image that includes the required
  # versions of the pods. In this case, the cocoapods cache entries can
  # also be commented out, I suppose.
  # - pod repo update

script:
  - set -o pipefail && xcodebuild clean build test -workspace DjangoConsumer.xcworkspace -scheme DjangoConsumer -destination 'platform=iOS Simulator,name=iPhone X,OS=latest' | xcpretty
